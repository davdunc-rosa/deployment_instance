AWSTemplateFormatVersion: '2010-09-09'
Description: 'Deployment instance with CORP network access'

Parameters:
  CurrentIP:
    Type: String
    Default: ""
    Description: Current IP address for access (optional if on Amazon VPN)

Resources:
  DeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: deployment-instance-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/IAMReadOnlyAccess
      Policies:
        - PolicyName: DeploymentPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:CreateInstanceProfile
                  - iam:DeleteInstanceProfile
                  - iam:AddRoleToInstanceProfile
                  - iam:RemoveRoleFromInstanceProfile
                  - iam:PassRole
                Resource: "*"

  DeploymentInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: deployment-instance-profile
      Roles:
        - !Ref DeploymentRole

  DeploymentVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: deployment-vpc

  DeploymentSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DeploymentVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: deployment-subnet

  DeploymentIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: deployment-igw

  DeploymentIGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref DeploymentVPC
      InternetGatewayId: !Ref DeploymentIGW

  DeploymentRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref DeploymentVPC
      Tags:
        - Key: Name
          Value: deployment-rt

  DeploymentRoute:
    Type: AWS::EC2::Route
    DependsOn: DeploymentIGWAttachment
    Properties:
      RouteTableId: !Ref DeploymentRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref DeploymentIGW

  DeploymentSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DeploymentSubnet
      RouteTableId: !Ref DeploymentRouteTable

  DeploymentSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for deployment instance
      VpcId: !Ref DeploymentVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourcePrefixListId: pl-02cd2c6b # AAPL CORP network prefix list
      Tags:
        - Key: Name
          Value: deployment-sg

  CurrentIPRule:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: HasCurrentIP
    Properties:
      GroupId: !Ref DeploymentSecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: !Sub "${CurrentIP}/32"

  DeploymentInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-07df3bb06da88a158
      InstanceType: t3.micro
      SubnetId: !Ref DeploymentSubnet
      IamInstanceProfile: !Ref DeploymentInstanceProfile
      SecurityGroupIds:
        - !Ref DeploymentSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #cloud-config
          users:
            - name: <default username>
              ssh-authorized-keys:
                - ssh-rsa ... comment
                - <ssh public-key> 
              sudo: ['ALL=(ALL) NOPASSWD:ALL']
          packages:
            - git
            - awscli
            - amazon-ssm-agent
          package_update: true
      Tags:
        - Key: Name
          Value: deployment-instance

Conditions:
  HasCurrentIP: !Not [!Equals [!Ref CurrentIP, ""]]

Outputs:
  InstanceId:
    Description: Instance ID
    Value: !Ref DeploymentInstance
  
  PublicIP:
    Description: Public IP address
    Value: !GetAtt DeploymentInstance.PublicIp
  
  SecurityGroupId:
    Description: Security Group ID
    Value: !Ref DeploymentSecurityGroup
